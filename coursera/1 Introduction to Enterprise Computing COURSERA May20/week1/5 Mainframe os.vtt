WEBVTT

1
00:00:02.660 --> 00:00:05.100
Operating Systems.

2
00:00:05.100 --> 00:00:07.575
Once you've made
an LPAR on a mainframe,

3
00:00:07.575 --> 00:00:10.230
you probably want to run
an operating system on it.

4
00:00:10.230 --> 00:00:12.075
Now, the mainframe runs

5
00:00:12.075 --> 00:00:14.130
several different
operating systems,

6
00:00:14.130 --> 00:00:15.405
and I'm going to take
you through them.

7
00:00:15.405 --> 00:00:17.355
First up, there's z/OS.

8
00:00:17.355 --> 00:00:20.280
Now, one thing you'll notice
about all the IBM built

9
00:00:20.280 --> 00:00:23.745
operating systems is they
all start with a z slash.

10
00:00:23.745 --> 00:00:26.700
When the mainframe moved
to the z architecture,

11
00:00:26.700 --> 00:00:29.160
basically when it
started running 64-bit,

12
00:00:29.160 --> 00:00:32.175
the operating system is got
renamed with that z as well.

13
00:00:32.175 --> 00:00:34.020
So that's why you see that.

14
00:00:34.020 --> 00:00:36.330
So the z/OS operating system is

15
00:00:36.330 --> 00:00:39.555
the flagship IBM mainframe
operating system.

16
00:00:39.555 --> 00:00:40.940
And if you trace the lineage of

17
00:00:40.940 --> 00:00:42.800
that operating system way back,

18
00:00:42.800 --> 00:00:45.260
it's a direct descendant
of the original OS

19
00:00:45.260 --> 00:00:49.385
360 that ran back on that
first mainframe back in 1964.

20
00:00:49.385 --> 00:00:53.030
It's focuses on running a wide
variety of mixed workloads

21
00:00:53.030 --> 00:00:55.335
simultaneously all
while delivering

22
00:00:55.335 --> 00:00:58.100
extremely high level
of quality of service.

23
00:00:58.100 --> 00:01:00.320
If someone today has a mainframe,

24
00:01:00.320 --> 00:01:02.345
chances are they're running z/OS,

25
00:01:02.345 --> 00:01:04.130
and we're actually going
to come back to this and

26
00:01:04.130 --> 00:01:05.810
talk more about z/OS later,

27
00:01:05.810 --> 00:01:06.530
but I want to talk about

28
00:01:06.530 --> 00:01:08.420
the other operating
systems first.

29
00:01:08.420 --> 00:01:11.150
First, there z/TPF, which stands

30
00:01:11.150 --> 00:01:13.985
for z Transaction
Processing Facility,

31
00:01:13.985 --> 00:01:17.060
commonly used by companies
dealing with high volumes

32
00:01:17.060 --> 00:01:20.320
of transactions that need to
get handled in real time.

33
00:01:20.320 --> 00:01:22.530
That means credit
card processors,

34
00:01:22.530 --> 00:01:24.345
airline reservation systems,

35
00:01:24.345 --> 00:01:26.535
hotel and auto rental chains.

36
00:01:26.535 --> 00:01:29.030
Z/TPF is extremely tied

37
00:01:29.030 --> 00:01:31.375
to the world of
travel and logistics.

38
00:01:31.375 --> 00:01:34.025
Z/VM is all about virtualization.

39
00:01:34.025 --> 00:01:36.275
Now, we mentioned
z/VM briefly before,

40
00:01:36.275 --> 00:01:37.910
the idea behind it is to provide

41
00:01:37.910 --> 00:01:41.950
guest operating systems running
essentially within z/VM,

42
00:01:41.950 --> 00:01:43.490
and then they get access to

43
00:01:43.490 --> 00:01:46.685
all the resources that
the host z/VM is running with.

44
00:01:46.685 --> 00:01:48.950
Interesting thing about z/VM is

45
00:01:48.950 --> 00:01:51.155
that it is a Type 1 Hypervisor.

46
00:01:51.155 --> 00:01:53.090
So instead of
running it on top of

47
00:01:53.090 --> 00:01:54.980
another operating system and then

48
00:01:54.980 --> 00:01:57.260
using that to host
the virtual machines,

49
00:01:57.260 --> 00:01:58.700
z/VM doesn't need

50
00:01:58.700 --> 00:02:00.815
another operating system
to do its thing,

51
00:02:00.815 --> 00:02:02.420
it does its own thing.

52
00:02:02.420 --> 00:02:04.280
That makes z/VM extremely

53
00:02:04.280 --> 00:02:07.015
efficient and valuable for
testing and development.

54
00:02:07.015 --> 00:02:08.750
Any operating system that runs on

55
00:02:08.750 --> 00:02:11.285
the mainframe will
run within z/VM.

56
00:02:11.285 --> 00:02:12.800
So if you eat a whole bunch of

57
00:02:12.800 --> 00:02:15.245
systems but don't want
to use up your LPARs,

58
00:02:15.245 --> 00:02:18.020
z/VM can do some pretty
interesting things.

59
00:02:18.020 --> 00:02:22.220
The other operating system
IBM makes is called z/VSE.

60
00:02:22.220 --> 00:02:24.470
This is a lesser used
operating system,

61
00:02:24.470 --> 00:02:26.000
but it's still very important for

62
00:02:26.000 --> 00:02:27.980
smaller companies who
needs something like

63
00:02:27.980 --> 00:02:31.975
z/OS which can do transaction
and batch processing,

64
00:02:31.975 --> 00:02:34.670
but don't need something
that big or that complex.

65
00:02:34.670 --> 00:02:35.930
You also don't need

66
00:02:35.930 --> 00:02:38.420
as many people to run
a z/VSE instance,

67
00:02:38.420 --> 00:02:39.830
and that's appealing to smaller

68
00:02:39.830 --> 00:02:41.680
companies with fewer people.

69
00:02:41.680 --> 00:02:44.040
Then there's Linux,
the same Linux

70
00:02:44.040 --> 00:02:46.020
that runs on phones, watches,

71
00:02:46.020 --> 00:02:48.720
game consoles,
toasters, guess what,

72
00:02:48.720 --> 00:02:50.055
it runs on the mainframe too,

73
00:02:50.055 --> 00:02:51.990
and it runs extremely well.

74
00:02:51.990 --> 00:02:53.460
If you know Linux,

75
00:02:53.460 --> 00:02:54.940
then you know Linux
on the mainframe,

76
00:02:54.940 --> 00:02:56.840
everything looks
pretty much the same.

77
00:02:56.840 --> 00:02:58.730
If you're not
familiar with Linux,

78
00:02:58.730 --> 00:03:00.290
it's an open source
operating system

79
00:03:00.290 --> 00:03:02.390
that's used pretty much
all over the place.

80
00:03:02.390 --> 00:03:03.800
I remember when Linux first

81
00:03:03.800 --> 00:03:05.240
started showing up
on the mainframe,

82
00:03:05.240 --> 00:03:07.955
people thought it was
crazy, as a crazy idea.

83
00:03:07.955 --> 00:03:09.740
The idea that operating system

84
00:03:09.740 --> 00:03:11.750
running on our beloved mainframe,

85
00:03:11.750 --> 00:03:14.960
that was coded by a bunch of
strangers on the internet.

86
00:03:14.960 --> 00:03:17.110
I mean, you want to
take this seriously,

87
00:03:17.110 --> 00:03:19.065
well, that was like back in 2000,

88
00:03:19.065 --> 00:03:20.150
another leap of faith and

89
00:03:20.150 --> 00:03:21.830
Linux is still running
on the mainframe,

90
00:03:21.830 --> 00:03:23.660
and it's hugely popular.

91
00:03:23.660 --> 00:03:26.510
Lastly, KVM or Kernel-based

92
00:03:26.510 --> 00:03:29.480
Virtual Machine is
an open source hypervisor.

93
00:03:29.480 --> 00:03:32.800
Similar to z/VM, it's
another Type 1 Hypervisor,

94
00:03:32.800 --> 00:03:34.175
meaning it doesn't require

95
00:03:34.175 --> 00:03:35.750
another operating system because

96
00:03:35.750 --> 00:03:37.490
it is an operating system.

97
00:03:37.490 --> 00:03:39.500
People like it because
it integrates with

98
00:03:39.500 --> 00:03:41.615
KVM running on other platforms.

99
00:03:41.615 --> 00:03:43.930
It's used a lot for
distributed workloads,

100
00:03:43.930 --> 00:03:45.585
where you need
a lot of something,

101
00:03:45.585 --> 00:03:47.240
because you can scale it out

102
00:03:47.240 --> 00:03:49.700
horizontally by adding
more instances,

103
00:03:49.700 --> 00:03:53.675
or up vertically by adding
additional capacity on demand.

104
00:03:53.675 --> 00:03:56.285
Back to the z operating system,

105
00:03:56.285 --> 00:03:58.060
often just shortened to z/OS.

106
00:03:58.060 --> 00:04:00.710
We're going to spend a lot of
time talking about z/OS in

107
00:04:00.710 --> 00:04:02.420
this course because it is

108
00:04:02.420 --> 00:04:04.940
the premiere mainframe
operating system.

109
00:04:04.940 --> 00:04:08.030
It's built specifically
for the z hardware.

110
00:04:08.030 --> 00:04:11.240
It offers continuous
high volume operations

111
00:04:11.240 --> 00:04:13.280
with high security and stability.

112
00:04:13.280 --> 00:04:15.320
Z/OS excels at supporting

113
00:04:15.320 --> 00:04:18.020
a huge ecosystem of
different workloads,

114
00:04:18.020 --> 00:04:19.460
supporting large numbers of

115
00:04:19.460 --> 00:04:21.425
different users at the same time.

116
00:04:21.425 --> 00:04:23.240
It does all this
while maintaining

117
00:04:23.240 --> 00:04:26.425
the highest quality of service
for any operating system,.

118
00:04:26.425 --> 00:04:28.520
By better knowing
the management functions

119
00:04:28.520 --> 00:04:29.900
of an operating system,

120
00:04:29.900 --> 00:04:32.480
we can better evaluate
exactly what components is

121
00:04:32.480 --> 00:04:35.380
z/OS are responsible for
what we're interested in.

122
00:04:35.380 --> 00:04:38.735
The z/OS operating system
is made up of components.

123
00:04:38.735 --> 00:04:41.030
Some of these components
are base elements which

124
00:04:41.030 --> 00:04:42.560
the operating system
comes with and

125
00:04:42.560 --> 00:04:44.585
is configured with by default.

126
00:04:44.585 --> 00:04:47.525
Other components are add
ons called features.

127
00:04:47.525 --> 00:04:50.260
The OS doesn't necessarily
need these to run,

128
00:04:50.260 --> 00:04:53.150
but you may run into them
depending on your job role.

129
00:04:53.150 --> 00:04:55.265
Now, I'll just tell
you right up front,

130
00:04:55.265 --> 00:04:56.944
there's a lot of components,

131
00:04:56.944 --> 00:04:58.980
and some of them will just
breeze right through,

132
00:04:58.980 --> 00:05:00.020
no need to define what's

133
00:05:00.020 --> 00:05:01.850
essentially spelled
out in the name,

134
00:05:01.850 --> 00:05:04.315
others we're going
to dive deeper into.

135
00:05:04.315 --> 00:05:05.840
We're going to cover
a lot of these in

136
00:05:05.840 --> 00:05:07.175
much greater detail later.

137
00:05:07.175 --> 00:05:08.900
So here we go.

138
00:05:08.900 --> 00:05:10.880
So to start off we've got

139
00:05:10.880 --> 00:05:12.815
the Transaction Manager which

140
00:05:12.815 --> 00:05:14.615
does basically what it's called,

141
00:05:14.615 --> 00:05:18.665
it manages transactions
across one or more resources.

142
00:05:18.665 --> 00:05:20.490
Then there's databases.

143
00:05:20.490 --> 00:05:23.635
A database's job is to keep
data at not only stored,

144
00:05:23.635 --> 00:05:25.400
but organized so it can be easily

145
00:05:25.400 --> 00:05:27.635
found and updated later on.

146
00:05:27.635 --> 00:05:29.675
Let's talk about batch jobs.

147
00:05:29.675 --> 00:05:32.375
Some work doesn't need
to happen in real-time.

148
00:05:32.375 --> 00:05:34.145
This could be because
the systems are

149
00:05:34.145 --> 00:05:36.200
less busy later on in the day,

150
00:05:36.200 --> 00:05:38.510
or it could just be because
of the nature of the data.

151
00:05:38.510 --> 00:05:41.300
For example, a delivery
logistics company

152
00:05:41.300 --> 00:05:42.500
loads its trucks at

153
00:05:42.500 --> 00:05:44.150
night so they can hit the roads

154
00:05:44.150 --> 00:05:46.370
bright early in the morning
when the drivers come in.

155
00:05:46.370 --> 00:05:48.920
They might take all the data
about what deliveries

156
00:05:48.920 --> 00:05:51.755
need to be made that day
and process it all at once,

157
00:05:51.755 --> 00:05:53.825
so it's ready when
the drivers come in.

158
00:05:53.825 --> 00:05:56.420
That's where you might
see a batch job.

159
00:05:56.420 --> 00:05:58.380
Then there's
the security manager.

160
00:05:58.380 --> 00:05:59.750
Make sure you can only get to

161
00:05:59.750 --> 00:06:01.700
resources if you're supposed to.

162
00:06:01.700 --> 00:06:03.140
Crypto services.

163
00:06:03.140 --> 00:06:04.400
That allows for the data to be

164
00:06:04.400 --> 00:06:06.410
protected by being encrypted,

165
00:06:06.410 --> 00:06:08.605
and then used by decrypting it.

166
00:06:08.605 --> 00:06:10.605
There's end user interfaces.

167
00:06:10.605 --> 00:06:12.890
Obviously, you need
something to bridge that gap

168
00:06:12.890 --> 00:06:14.030
between the system and

169
00:06:14.030 --> 00:06:15.770
the people who are
trying to use it,

170
00:06:15.770 --> 00:06:19.465
and we use TSO which stands
for Time Sharing Option.

171
00:06:19.465 --> 00:06:21.560
That makes it possible
for one system to

172
00:06:21.560 --> 00:06:23.780
have thousands of
connected users.

173
00:06:23.780 --> 00:06:26.990
So there's this concept
on z/OS of a job,

174
00:06:26.990 --> 00:06:28.580
and you're going to
hear that word a lot.

175
00:06:28.580 --> 00:06:30.410
A job is like a program,

176
00:06:30.410 --> 00:06:32.000
but it's a program with

177
00:06:32.000 --> 00:06:34.355
a specific set of
input and output.

178
00:06:34.355 --> 00:06:37.130
So imagine you've got
a payroll program.

179
00:06:37.130 --> 00:06:38.420
It does the same thing.

180
00:06:38.420 --> 00:06:39.680
It takes the number of hours,

181
00:06:39.680 --> 00:06:41.180
somebody work their wages,

182
00:06:41.180 --> 00:06:43.100
and creates a sheet
basically saying,

183
00:06:43.100 --> 00:06:44.690
pay this person this much

184
00:06:44.690 --> 00:06:46.505
or maybe even cuts
the cheques for them.

185
00:06:46.505 --> 00:06:49.670
So the program itself doesn't
change from run to run,

186
00:06:49.670 --> 00:06:51.155
but it's got a different set of

187
00:06:51.155 --> 00:06:52.850
input and output each time.

188
00:06:52.850 --> 00:06:55.550
You write how you want
your job to run in something

189
00:06:55.550 --> 00:06:58.795
called the Job Control
Language or JCL,

190
00:06:58.795 --> 00:07:03.435
and that gets submitted to
the Job Entry Subsystem, JES.

191
00:07:03.435 --> 00:07:05.025
So you with me so far?

192
00:07:05.025 --> 00:07:08.600
Good. When the system gets
around to running it,

193
00:07:08.600 --> 00:07:12.005
it processes the data and it
puts every piece of output,

194
00:07:12.005 --> 00:07:15.320
good, bad, and different
into the job output.

195
00:07:15.320 --> 00:07:18.035
So you know exactly
how your job run,

196
00:07:18.035 --> 00:07:19.685
and you use another component,

197
00:07:19.685 --> 00:07:22.355
the System Display
and Search Facility,

198
00:07:22.355 --> 00:07:24.425
thankfully shortened to SDSF

199
00:07:24.425 --> 00:07:26.035
to look at all of that output.

200
00:07:26.035 --> 00:07:28.520
Now, as you can imagine
when it comes time

201
00:07:28.520 --> 00:07:30.875
to upgrade and manage
software on a mainframe,

202
00:07:30.875 --> 00:07:34.835
it's important that everything
gets managed and tracked.

203
00:07:34.835 --> 00:07:37.570
Some software depends on
other software to run,

204
00:07:37.570 --> 00:07:39.290
so to install it you have to also

205
00:07:39.290 --> 00:07:41.300
install what's called
a prerequisite.

206
00:07:41.300 --> 00:07:43.670
Sometimes you can't
upgrade one piece of

207
00:07:43.670 --> 00:07:46.205
software without also
upgrading another one.

208
00:07:46.205 --> 00:07:49.120
So how do you keep all of
these dependencies straight?

209
00:07:49.120 --> 00:07:51.195
Fortunately, you don't have to,

210
00:07:51.195 --> 00:07:56.265
you have SMP/E, the System
Modification Program Extended.

211
00:07:56.265 --> 00:07:59.045
Performance is extremely
important on the mainframe,

212
00:07:59.045 --> 00:08:00.890
and it's not enough
just to say, ''Yeah,

213
00:08:00.890 --> 00:08:03.450
everything's running
really fast, is good.''

214
00:08:03.450 --> 00:08:05.300
You need to be able
to say exactly how

215
00:08:05.300 --> 00:08:07.760
long the average transaction
is running for,

216
00:08:07.760 --> 00:08:09.140
how long users are waiting for

217
00:08:09.140 --> 00:08:11.405
the response, all that stuff.

218
00:08:11.405 --> 00:08:13.820
On the mainframe,
you'll use RMF or

219
00:08:13.820 --> 00:08:15.830
the Resource Measurement Facility

220
00:08:15.830 --> 00:08:18.410
to keep tabs on how
everything is being used.

221
00:08:18.410 --> 00:08:20.690
This is like the gauges
in your car,

222
00:08:20.690 --> 00:08:22.980
but it also includes
data gathered over time,

223
00:08:22.980 --> 00:08:25.085
so you can see
trends and patterns.

224
00:08:25.085 --> 00:08:26.955
Managing storage is important,

225
00:08:26.955 --> 00:08:29.370
and the mainframe uses DFSMS,

226
00:08:29.370 --> 00:08:32.430
the Data Facility Storage
Management Service

227
00:08:32.430 --> 00:08:34.545
to manage what data goes where.

228
00:08:34.545 --> 00:08:37.080
It also handles
backups, migrations,

229
00:08:37.080 --> 00:08:40.520
copies and all input
output management.

230
00:08:40.520 --> 00:08:42.620
Something else that's
fairly unique to

231
00:08:42.620 --> 00:08:45.580
the mainframe platform
is Workload Manager.

232
00:08:45.580 --> 00:08:47.334
Just like with other managers,

233
00:08:47.334 --> 00:08:48.770
it makes sure that
when you're running

234
00:08:48.770 --> 00:08:51.934
multiple things at the same time
on the same platform,

235
00:08:51.934 --> 00:08:54.635
they all get a fair slice
of the system resources.

236
00:08:54.635 --> 00:08:57.230
But the Workload Manager
takes it a step further.

237
00:08:57.230 --> 00:09:00.140
It's actually backwards from
what you might be used to.

238
00:09:00.140 --> 00:09:01.970
You start by defining goals,

239
00:09:01.970 --> 00:09:04.760
you say whenever this type
of transaction happens,

240
00:09:04.760 --> 00:09:07.025
it needs to finish in
this amount of time.

241
00:09:07.025 --> 00:09:08.870
Or maybe it's just this LPAR

242
00:09:08.870 --> 00:09:10.630
over here is extremely important,

243
00:09:10.630 --> 00:09:13.090
it gets priority over
all the other LPAR.

244
00:09:13.090 --> 00:09:14.990
So don't let anything
they're doing

245
00:09:14.990 --> 00:09:16.970
slow down anything on this LPAR,

246
00:09:16.970 --> 00:09:18.650
it's the most important one.

247
00:09:18.650 --> 00:09:20.735
So when you set it up correctly,

248
00:09:20.735 --> 00:09:22.025
it's not a free for all,

249
00:09:22.025 --> 00:09:25.550
it's a carefully controlled
and managed environment.

250
00:09:25.550 --> 00:09:27.500
TCP/IP or to be complete,

251
00:09:27.500 --> 00:09:30.665
SNA TCP/IP which stands for

252
00:09:30.665 --> 00:09:33.409
Systems Network
Architecture Transmission

253
00:09:33.409 --> 00:09:36.335
Control Protocol
Internet Protocol.

254
00:09:36.335 --> 00:09:39.730
You can see why we
just say SNA TCP/IP.

255
00:09:39.730 --> 00:09:41.795
This is a component of z/OS,

256
00:09:41.795 --> 00:09:44.380
and it's where all of a
network communication lives.

257
00:09:44.380 --> 00:09:47.500
That's all computer to
computer, computer to Internet.

258
00:09:47.500 --> 00:09:49.360
Basically, anything
where a network

259
00:09:49.360 --> 00:09:51.890
gets used uses SNA TCP/IP.

260
00:09:51.890 --> 00:09:54.575
Now, whenever anything
happens on the mainframe,

261
00:09:54.575 --> 00:09:56.050
it's extremely important that

262
00:09:56.050 --> 00:09:57.775
there be a record
of it happening.

263
00:09:57.775 --> 00:09:59.560
The idea of a program writing out

264
00:09:59.560 --> 00:10:02.300
a diagnostic log isn't
unique to the mainframe,

265
00:10:02.300 --> 00:10:04.660
but because there's so
much happening here,

266
00:10:04.660 --> 00:10:06.760
it's important that there
be a standard format

267
00:10:06.760 --> 00:10:09.235
and a facility to
keep it all straight.

268
00:10:09.235 --> 00:10:12.205
Almost like a database
for tracking events,

269
00:10:12.205 --> 00:10:15.575
that's SMF, the Systems
Management Facility.

270
00:10:15.575 --> 00:10:18.460
SMF comes in handy for
diagnosing problems,

271
00:10:18.460 --> 00:10:22.015
auditing transactions, and
for tracing process flows.

272
00:10:22.015 --> 00:10:24.310
Last but certainly not least is

273
00:10:24.310 --> 00:10:27.015
USS or Unix System Services.

274
00:10:27.015 --> 00:10:29.180
You may not know this,
but you can actually run

275
00:10:29.180 --> 00:10:32.060
Unix programs within
the z/OS environment.

276
00:10:32.060 --> 00:10:35.800
Z/OS has USS which is
a POSIX compliant environment,

277
00:10:35.800 --> 00:10:39.005
so you can run scripts,
utilities, and tools.

278
00:10:39.005 --> 00:10:41.120
It's not an operating
system within

279
00:10:41.120 --> 00:10:44.315
z/OS like a VM, it's
an environment.

280
00:10:44.315 --> 00:10:45.680
So that means a lot of

281
00:10:45.680 --> 00:10:47.405
the utilities are
shared between them,

282
00:10:47.405 --> 00:10:48.680
and you can even fire off

283
00:10:48.680 --> 00:10:51.470
z/OS jobs from
within a Unix shell.

284
00:10:51.470 --> 00:10:55.305
Those are the z/OS components.

285
00:10:55.305 --> 00:11:00.700
Took a little while, but I
think it was time well spent.