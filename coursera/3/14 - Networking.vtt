WEBVTT

1
00:00:02.630 --> 00:00:04.770
Chances are you want

2
00:00:04.770 --> 00:00:07.175
your mainframe on a
network of some sort.

3
00:00:07.175 --> 00:00:09.235
Maybe not the Internet,

4
00:00:09.235 --> 00:00:10.705
but back in course one,

5
00:00:10.705 --> 00:00:12.720
we talked about all of the PCIe

6
00:00:12.720 --> 00:00:14.940
adapters that a system can have,

7
00:00:14.940 --> 00:00:17.040
and chances are,
some of those are

8
00:00:17.040 --> 00:00:19.665
OSA or Open Systems Adaptors.

9
00:00:19.665 --> 00:00:21.660
These are the network cards for

10
00:00:21.660 --> 00:00:24.150
the mainframe and they
come in a wide variety of

11
00:00:24.150 --> 00:00:26.400
flavors suited for copper and

12
00:00:26.400 --> 00:00:28.920
fiber links from
gigabit to 10 gigabit,

13
00:00:28.920 --> 00:00:31.620
and even up to 25 gigabit speeds.

14
00:00:31.620 --> 00:00:37.175
On z/OS, TCPIP is handled
by the TCPIP started task.

15
00:00:37.175 --> 00:00:40.040
So it starts up and
stays up generally

16
00:00:40.040 --> 00:00:43.510
until the cyst Prague or
another operator takes it down.

17
00:00:43.510 --> 00:00:46.835
Generally, we refer to
this started TCPIP task

18
00:00:46.835 --> 00:00:50.285
as a stack, the TCPIP stack.

19
00:00:50.285 --> 00:00:52.865
Before we get into
the TCPIP stack,

20
00:00:52.865 --> 00:00:54.830
I want to take just a
minute to dive into

21
00:00:54.830 --> 00:00:57.965
the concepts of IP
addresses and sockets.

22
00:00:57.965 --> 00:00:59.720
If you're already familiar with

23
00:00:59.720 --> 00:01:01.280
this from another platform,

24
00:01:01.280 --> 00:01:02.420
the next minute and a half

25
00:01:02.420 --> 00:01:03.590
probably won't be
all that new to you.

26
00:01:03.590 --> 00:01:05.840
So you can go and
check your email or

27
00:01:05.840 --> 00:01:07.310
scroll around a little
bit if you don't

28
00:01:07.310 --> 00:01:09.310
want to hear it, I
won't be offended.

29
00:01:09.310 --> 00:01:11.510
Typically, a system on a network

30
00:01:11.510 --> 00:01:13.985
has an IP address or two.

31
00:01:13.985 --> 00:01:17.030
You'll even see some z/OS
systems that have five,

32
00:01:17.030 --> 00:01:19.400
six, even more IP addresses.

33
00:01:19.400 --> 00:01:20.900
An IP address is

34
00:01:20.900 --> 00:01:25.550
a 32 bit address represented
in dotted decimal like this.

35
00:01:25.550 --> 00:01:28.430
So it looks like four
numbers each between

36
00:01:28.430 --> 00:01:32.120
zero and 255 with
dots in between them.

37
00:01:32.120 --> 00:01:35.645
That address is a lot like
an address for a house.

38
00:01:35.645 --> 00:01:38.000
With that address, we
can find the server on

39
00:01:38.000 --> 00:01:41.785
the network or even the Internet
that we want to talk to.

40
00:01:41.785 --> 00:01:44.670
I'll also mention that
the 32 bit address

41
00:01:44.670 --> 00:01:47.490
is what's called an IPv4 address.

42
00:01:47.490 --> 00:01:49.460
There's a constant
concern that will run

43
00:01:49.460 --> 00:01:51.515
out of IPv4 addresses.

44
00:01:51.515 --> 00:01:54.370
So there's also IPv6.

45
00:01:54.370 --> 00:01:55.910
This is much longer,

46
00:01:55.910 --> 00:01:59.570
it's a 128 bits and
it looks like this.

47
00:01:59.570 --> 00:02:02.840
It's longer, it uses
Colin's data dots,

48
00:02:02.840 --> 00:02:04.910
and it's represented
in hexadecimal.

49
00:02:04.910 --> 00:02:07.655
So there's a couple
letters in there to.

50
00:02:07.655 --> 00:02:11.140
Many more possible combinations.

51
00:02:11.140 --> 00:02:14.840
You won't see an IPv6
address everywhere just yet,

52
00:02:14.840 --> 00:02:16.385
people are still
trying to ride out

53
00:02:16.385 --> 00:02:18.785
IPv4 for as long as possible,

54
00:02:18.785 --> 00:02:21.200
but in case you see an
IP address that looks

55
00:02:21.200 --> 00:02:24.475
different than what you are
expecting, that might be it.

56
00:02:24.475 --> 00:02:27.000
Anyway, the IP address,

57
00:02:27.000 --> 00:02:30.840
be it IPv4 or v6 gets
us to the server,

58
00:02:30.840 --> 00:02:33.380
but a server can run
on multiple programs.

59
00:02:33.380 --> 00:02:35.990
How do we get to the
exact program we want?

60
00:02:35.990 --> 00:02:39.215
Those programs operate on
what's called a socket.

61
00:02:39.215 --> 00:02:41.670
So you've got the IP address,

62
00:02:41.670 --> 00:02:44.205
colon, and then
the socket number.

63
00:02:44.205 --> 00:02:46.205
All that goes over the network.

64
00:02:46.205 --> 00:02:48.530
Once a socket connection
is established,

65
00:02:48.530 --> 00:02:50.900
the program can start
issuing reads and writes

66
00:02:50.900 --> 00:02:53.885
on that socket to
get or put data.

67
00:02:53.885 --> 00:02:55.640
Then when it's done we close

68
00:02:55.640 --> 00:02:57.875
that socket and life goes on.

69
00:02:57.875 --> 00:03:00.875
So we have this TCPIP profile,

70
00:03:00.875 --> 00:03:02.990
and within it we find a number of

71
00:03:02.990 --> 00:03:06.280
statements that build our
configuration step-by-step.

72
00:03:06.280 --> 00:03:08.180
For example, you'll probably find

73
00:03:08.180 --> 00:03:10.595
devise link and home statements.

74
00:03:10.595 --> 00:03:12.170
The device statement states

75
00:03:12.170 --> 00:03:14.630
which network devices
we want to use,

76
00:03:14.630 --> 00:03:16.220
the subsequent links statements

77
00:03:16.220 --> 00:03:17.840
say how we want to use them,

78
00:03:17.840 --> 00:03:20.120
and then below that in
the home statements,

79
00:03:20.120 --> 00:03:22.250
that's where we set
the IP addresses

80
00:03:22.250 --> 00:03:24.215
and net masking and
all that stuff.

81
00:03:24.215 --> 00:03:27.500
Now, this is a fairly
simple setup right here.

82
00:03:27.500 --> 00:03:29.480
There's three devices,
three links statements,

83
00:03:29.480 --> 00:03:31.055
and three IP addresses.

84
00:03:31.055 --> 00:03:33.740
It can get quite a
bit more complicated

85
00:03:33.740 --> 00:03:36.500
where it's not always a
one-to-one-to-one mapping.

86
00:03:36.500 --> 00:03:38.210
I just don't really
think that we're making

87
00:03:38.210 --> 00:03:40.105
this complex for no reason.

88
00:03:40.105 --> 00:03:45.000
Now, let's talk about
that VIPALNK1 entry.

89
00:03:45.000 --> 00:03:48.300
That sounds interesting,
and yeah, actually it is.

90
00:03:48.300 --> 00:03:52.430
So typically an IP address
should only be defined in

91
00:03:52.430 --> 00:03:54.830
one place because
there needs to be

92
00:03:54.830 --> 00:03:58.460
no confusion about where
that IP address is.

93
00:03:58.460 --> 00:04:01.280
Typically, if we tell
someone that a server

94
00:04:01.280 --> 00:04:03.800
is at a specific IP address,

95
00:04:03.800 --> 00:04:07.100
and that server goes down or
there's a network problem,

96
00:04:07.100 --> 00:04:10.055
people can no longer
reach that server.

97
00:04:10.055 --> 00:04:12.170
That's when they start
calling you and getting

98
00:04:12.170 --> 00:04:14.330
angry and nobody wants that.

99
00:04:14.330 --> 00:04:16.390
What a VIPA does,

100
00:04:16.390 --> 00:04:20.240
is it defines an IP address
to the system virtually.

101
00:04:20.240 --> 00:04:21.815
Take a look at this diagram.

102
00:04:21.815 --> 00:04:24.360
We've got two LPARs
each defined with

103
00:04:24.360 --> 00:04:26.060
the same VIPA in addition to

104
00:04:26.060 --> 00:04:29.255
their own unique IP addresses
for each network link.

105
00:04:29.255 --> 00:04:32.300
This is a fairly standard
high availability setup

106
00:04:32.300 --> 00:04:35.075
because if one LPAR
is the primary,

107
00:04:35.075 --> 00:04:38.300
and also device one goes
down for whatever reason,

108
00:04:38.300 --> 00:04:40.040
that VIPA is still reachable

109
00:04:40.040 --> 00:04:41.900
through the second pathway at

110
00:04:41.900 --> 00:04:43.955
the same IP address or

111
00:04:43.955 --> 00:04:46.230
even if the whole
LPAR will go down,

112
00:04:46.230 --> 00:04:48.075
the backup takes over.

113
00:04:48.075 --> 00:04:49.850
It's got two links as well.

114
00:04:49.850 --> 00:04:53.930
So you can actually lose
three links and an LPAR and

115
00:04:53.930 --> 00:04:55.730
the service is still available at

116
00:04:55.730 --> 00:04:58.485
that VIPA address. Pretty cool.

117
00:04:58.485 --> 00:05:00.410
For that reason,
you'll often find

118
00:05:00.410 --> 00:05:02.300
critical services associated with

119
00:05:02.300 --> 00:05:04.820
a VIPA instead of an
IP address that's

120
00:05:04.820 --> 00:05:07.820
hard coded to a single
link or device.

121
00:05:07.820 --> 00:05:10.490
The virtualization
and architecture of z

122
00:05:10.490 --> 00:05:12.950
allows for some pretty
crafty ways of implementing

123
00:05:12.950 --> 00:05:16.265
highly available and highly
performance solutions

124
00:05:16.265 --> 00:05:17.950
that you just won't
find anywhere else,

125
00:05:17.950 --> 00:05:21.230
especially in distributed
environments.